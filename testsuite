#!/bin/sh

# Run integration tests (on the installed package). This happens on unshared
# tmpfses, so does not interfere with installed clusters.
#
# (C) 2005-2012 Martin Pitt <mpitt@debian.org>
# (C) 2012-2014 Christoph Berg <myon@debian.org>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

set -e

# default config
TESTSDIR="$(dirname $0)/t"
: ${PG_UMASKS="022 077"}

help ()
{
    echo "postgresql-common testsuite"
    echo "Syntax: $0 [options] [test ...]"
    echo "    -f number        run tests starting at this number"
    echo "    -i               install packages for versions specified by -v"
    echo "    -s               start a shell in the testbed on failure"
    echo "    -u 'umask ...'   umasks to run testsuite with [default: 022 077]"
    echo "    -v 'version ...' PostgreSQL versions to test [default: client versions installed]"
    exit ${1:-0}
}

# option parsing
while getopts "hf:isu:v:" opt ; do
    case $opt in
        f) FROM="$OPTARG" ;;
        i) INSTALL=1 ;;
        h) help ;;
        s) RUN_SHELL=1 ;;
        u) PG_UMASKS="$OPTARG" ;;
        v) export PG_VERSIONS="$OPTARG" ;; # used in t/TestLib.pm
        *) help 1 ;;
    esac
done

# install packages for versions specified by -v
# needs network for apt, so run before unshare
if [ "${INSTALL:-}" ] && [ -z "${UNSHARED:-}" ]; then
    for v in $PG_VERSIONS; do
        apt-get install -y postgresql-contrib-$v \
            postgresql-plperl-$v \
            postgresql-plpython-$v \
            postgresql-plpython3-$v \
            postgresql-pltcl-$v \
            postgresql-server-dev-$v
    done
    apt-get install -y libecpg-dev \
        locales \
        logrotate \
        procps \
        netcat-openbsd \
        hunspell-en-us
fi
# requirements on RedHat:
# perl-Test-Simple perl-Time-HiRes

# shift away args
shift $(($OPTIND - 1))

mkdir -p /etc/postgresql /etc/postgresql-common /var/lib/postgresql /var/log/postgresql /var/run/postgresql
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
cd "$(dirname $0)"

echo "initdb_options = '-A trust -U postgres'" >> /etc/postgresql-common/createcluster.conf
gsed -i -r 's/^(stats_temp_directory)/#\1/g' /etc/postgresql-common/createcluster.conf
echo 'PGUSER=postgres' > /etc/postgresql-common/environment

# reset core limit for pg_ctl tests
ulimit -S -c 0

# set environment
unset TMPDIR
unset LC_ALL
export LANG=en_US.UTF-8

# set variables which cause taint check errors
export IFS=' '
export CDPATH=/usr
export ENV=/nonexisting
export BASH_ENV=/nonexisting

if [ $# -eq 0 ]; then
    set -- $TESTSDIR/*.t
fi

for U in $PG_UMASKS; do
    case $U in
        022) TYPE="default" ;;
        077) TYPE="tight" ;;
        *) TYPE="custom" ;;
    esac

    echo "====== Running all tests with $TYPE umask $U ======="
    umask $U
    for T; do
        TBASE=${T##*/}
        [ "$FROM" ] && [ "${TBASE%%_*}" -lt "$FROM" ] && continue
        echo "=== Running test $TBASE ... ==="
        perl $T || {
            EXIT=$?
            if [ "${RUN_SHELL:-}" ]; then
                echo "*** $TBASE failed with status $EXIT, dropping you into a shell in the testbed ***"
                ${SHELL:-/bin/sh}
            fi
            exit $EXIT
        }
    done
done
